//ADMIX_MAIN
#include "D_Main.h"
#include "D_I2C.h"
#include "D_SIO.h"
#include "D_EIO.h"





//MOTOR
  //現在の出力
  int M0;
  int M1;
  int M2;
  int M3;

  //出力目標値
  int I;
  int J;
  int K;
  int L;

  //出力レベル
  int MP;//motorpower
  int LMP;//linemotorpower
  int MPlus;//比例足す値

//DIR
  int A;//出力
  int B;//偏差の微分
  int C;//操作量C
  int N;//微分ゲイン
  float O;//操作量Aを割る定数
  int P;//比例ゲイン
  int V;//微分用の今回偏差の保存
  int X;//攻め方向と現在の向きの差
  int Y;//開始時攻め方向
  int Z;//現在の向き
  int Smalldiff;//許容誤差
  int pixy;//0で普通のDIR, 1でPIXYDIR

//BALL
  int list[8];//ボルセン配列
  int max_index;//最大ボルセンindex
  int max_value;//最大ボルセン値
  int i;//for文





int LINE_MAIN(void){
  if (sub_io_get_gV(1, VAR_M) >= 200) {
    set_Led(1, LED_ON);
    return 0;
  }
  if (sub_io_get_gV(1, VAR_N) >= 200) {
    set_Led(1, LED_ON);
    return 1;
  }
  if (sub_io_get_gV(1, VAR_O) >= 200) {
    set_Led(1, LED_ON);
    return 2;
  }
  if (sub_io_get_gV(1, VAR_P) >= 200) {
    return 3;
  }
  else{
    set_Led(1, LED_OFF);
    return 4;
  }
}





int MOTOR(){
  if(I == M0){
    M0 = I;
  }else{
    M0 = I/2;
  }
  if(J == M1){
    M1 = J;   
  }else{
    M1 = J/2;
  }
  if(K == M2){
    M2 = K;
  }else{
    M2 = K/2;
  }
  if(L == M3){
    M3 = L;
  }else{
    M3 = L/2;
  }
  while (TRUE){
    gPwm[0] = M0 < 0 ? (M0 * -1) | 0x80 : M0;
    gPwm[1] = M1 < 0 ? (M1 * -1) : M1 | 0x80;
    gPwm[2] = M2 < 0 ? (M2 * -1) | 0x80 : M2;
    gPwm[3] = M3 < 0 ? (M3 * -1) : M3 | 0x80;
    pwm_out();
    wait_ms(1);
    if(I >= 0)//比例制御↓
      M0 = M0 < I ? (M0 + MPlus) : I;
    else
      M0 = M0 > I ? (M0 - MPlus) : I;
    if(J >= 0)
      M1 = M1 < J ? (M1 + MPlus) : J;
    else
      M1 = M1 > J ? (M1 - MPlus) : J;
    if(K >= 0)
      M2 = M2 < K ? (M2 + MPlus) : K;
    else
      M2 = M2 > K ? (M2 - MPlus) : K;
    if(L >= 0)
      M3 = M3 < L ? (M3 + MPlus) : L;
    else
      M3 = M3 > L ? (M3 - MPlus) : L;
    switch(LINE_MAIN()){//ラインチェック↓
      case 0:
        DIR();
        I = LMP;
        J = LMP;
        K = LMP;
        L = LMP;
        M0 = I / 2;
        M1 = J / 2;
        M2 = K / 2;
        M3 = L / 2;
        break;
      case 1:
        DIR();
        I = -1 * LMP;
        J = MP;
        K = -1 * LMP;
        L = MP;
        M0 = I / 2;
        M1 = J / 2;
        M2 = K / 2;
        M3 = L / 2;
        break;
      case 2:
        DIR();
        I = -1 * LMP;
        J = -1 * LMP;
        K = -1 * LMP;
        L = -1 * LMP;
        M0 = I / 2;
        M1 = J / 2;
        M2 = K / 2;
        M3 = L / 2;
        break;
      case 3:
        DIR();
        I = MP;//0にしたらライン読まないよ！
        J = -1 * LMP;
        K = MP;
        L = -1 * LMP;
        set_Led(1, LED_ON);
        M0 = I / 2;
        M1 = J / 2;
        M2 = K / 2;
        M3 = L / 2;
        break;
      case 4:
        break;
    }
    if(I >= 0 && J >= 0){//目標値に到達↓
      if(M0 >= I && M1 >= J && M2 >= K && M3 >= L)
        break;
    }else if(I >= 0 && J < 0){
      if(M0 >= I && J >= M1 && M2 >= K && L >= M3)
        break;
    }else if(I < 0 && J >= 0){
      if(I >= M0 && M1 >= J && K >= M2 && M3 >= L)
        break;
    }else if(I < 0 && J < 0){
      if(I >= M0 && J >= M1 && K >= M2 && L >= M3)
        break;
    }
  }
}





int BALL(void){
  list[0] = gAD[CN1];
  list[1] = gAD[CN2];
  list[2] = gAD[CN3];
  list[3] = gAD[CN4];
  list[4] = gAD[CN5];
  list[5] = gAD[CN6];
  list[6] = gAD[CN7];
  list[7] = gAD[CN8];
  if(list[0] + list[1] + list[2] + list[3] + list[4] + list[5] + list[6] + list[7] <= 100){
    return 24;
  }
  max_value = list[0];
  max_index = 0;
  for (i = 0; i < 8; i++) {
    if (list[i] > max_value) {
      max_value = list[i];
      max_index = i;
    }
  }
  if(max_value >= 601 && max_value <=700){
    return max_index + 8;
      }else if(max_value >= 701){
    return max_index + 16;
  }else{
    return max_index;
  }
}





int DIR(void)
{
  while(TRUE){
    N = 40;//微分ゲイン
    P = 3;//比例ゲイン
    O = 5;//操作量Aを割る定数
    Z = get_bno(0);
    X = Z - Y;
    if(X > 180){
      X = X - 360;
    }else if(X < -180){
       X = X + 360;
    }
    if(X > -1 * Smalldiff && X < Smalldiff){
      break;
    }else{
      B = V - X;
      V = X;
      A = P * X;
      C = N * B;
      A = A - C;
      A = A / O;
      if(A < -100){
        A = -100;//操作量下限値
      }else if(A > 100){
        A = 100;//操作量上限値
      }
      if(A > 0 && A < 25){
        A = 25;
      }else if(A < 0 && A > -25){
        A = -25;
      }
      gPwm[0] = A < 0 ? (A * -1) | 0x80 : A;  
      gPwm[1] = A < 0 ? (A * -1) : A | 0x80;
      gPwm[2] = A < 0 ? (A * -1) : A | 0x80; 
      gPwm[3] = A < 0 ? (A * -1) | 0x80 : A;  
      pwm_out();
      wait_ms(1);
    }
  }
}





void PIXYDIR(void){
  while(TRUE){
    if(get_pixydat_x(1) == 0){
      DIR();
      I = -30;
      J = -30;
      K = -30;
      L = -30;
      break;
    }
    N = 100;//微分ゲイン
    P = 2;//比例ゲイン
    O = 8;//操作量Aを割る定数
    X = 160 - get_pixydat_x(1);
    if(X > 180){
      X = X - 360;
    }else if(X < -180){
       X = X + 360;
    }
    if(X > -1 * Smalldiff && X < Smalldiff){
      break;
    }else{
      B = V - X;
      V = X;
      A = P * X;
      C = N * B;
      A = A - C;
      A = A / O;
      if(A < -100){
        A = -100;//操作量下限値
      }else if(A > 100){
        A = 100;//操作量上限値
      }
      /*if(A > 0 && A < 25){
        A = 25;
      }else if(A < 0 && A > -25){
        A = -25;
      }*/
      gPwm[0] = A < 0 ? (A * -1) | 0x80 : A;  
      gPwm[1] = A < 0 ? (A * -1) : A | 0x80;
      gPwm[2] = A < 0 ? (A * -1) : A | 0x80; 
      gPwm[3] = A < 0 ? (A * -1) | 0x80 : A;  
      pwm_out();
      wait_ms(1);
    }
  }
}





void user_main(void){
  Y = get_bno(0);
  MP = 70;//モーターの出力
  LMP = 100;//ライン出力
  MPlus = 5;
  while(TRUE){
    pixy = 0;
    set_Led(1, LED_OFF);
    switch(BALL()){
      //遠
      case 0://前
        pixy = 1;
        Smalldiff = 20;
        I = MP;
        J = MP;
        K = MP;
        L = MP;
        break;
      case 1://右前
        pixy = 1;
        Smalldiff = 15;
        I = MP;
        J = 0;
        K = MP;
        L = 0;
        break;
      case 2://右
        pixy = 1;
        Smalldiff = 20;
        I = MP;
        J = MP * -1;
        K = MP;
        L = MP * -1;
        break;
      case 3://右後
        Smalldiff = 25;
        I = 0;
        J = MP * -1;
        K = 0;
        L = MP * -1;
        break;
      case 4://後
          Smalldiff = 30;
        if(gAD[CN4] >= gAD[CN6]){
          I = MP * -1;
          J = 0;
          K = MP * -1;
          L = 0;
          break;
        }else if(gAD[CN6] >= gAD[CN4]){
          I = 0;
          J = MP * -1;
          K = 0;
          L = MP * -1;
          break;
        }
      case 5://左後
        Smalldiff = 25;
        I = MP * -1;
        J = 0;
        K = MP * -1;
        L = 0;
        break;
      case 6://左
        pixy = 1;
        Smalldiff = 20;
        I = MP * -1;
        J = MP;
        K = MP * -1;
        L = MP;
        break;
      case 7://左前
        pixy = 1;
        Smalldiff = 15;
        I = 0;
        J = MP;
        K = 0;
        L = MP;
        break;
        
        
        
      //普通
      case 8://前
        pixy = 1;
        Smalldiff = 20;
        I = MP;
        J = MP;
        K = MP;
        L = MP;
        break;
      case 9://右前
        pixy = 1;
        Smalldiff = 15;
        I = MP;
        J = MP * -1;
        K = MP;
        L = MP * -1;
        break;
      case 10://右
        pixy = 1;
        Smalldiff = 20;
        I = 0;
        J = MP * -1;
        K = 0;
        L = MP * -1;
        break;
      case 11://右後
        Smalldiff = 25;
        I = MP * -1;
        J = MP * -1;
        K = MP * -1;
        L = MP * -1;
        break;
      case 12://後
        if(gAD[CN4] >= gAD[CN6]){
          Smalldiff = 30;
          I = MP * -1;
          J = 0;
          K = MP * -1;
          L = 0;
          break;
        }else if(gAD[CN6] >= gAD[CN4]){
          Smalldiff = 30;
          I = 0;
          J = MP * -1;
          K = 0;
          L = MP * -1;
          break;
        }
      case 13://左後
        Smalldiff = 25;
        I = MP * -1;
        J = MP * -1;
        K = MP * -1;
        L = MP * -1;
        break;
      case 14://左
        pixy = 1;
        Smalldiff = 20;
        I = MP * -1;
        J = 0;
        K = MP * -1;
        L = 0;
        break;
      case 15://左前
        pixy = 1;
        Smalldiff = 15;
        I = MP * -1;
        J = MP;
        K = MP * -1;
        L = MP;
        break;



      //近
      case 16://前
        pixy = 1;
        Smalldiff = 20;
        I = MP;
        J = MP;
        K = MP;
        L = MP;
        break;
      case 17://右前
        pixy = 1;
        Smalldiff = 20;
        I = 0;
        J = MP * -1;
        K = 0;
        L = MP * -1;
        break;
      case 18://右
        pixy = 1;
        Smalldiff = 20;
        I = MP * -1;
        J = MP * -1;
        K = MP * -1;
        L = MP * -1;
        break;
      case 19://右後
        Smalldiff = 25;
        I = MP * -1;
        J = 0;
        K = MP * -1;
        L = 0;
        break;
      case 20://後
        if(gAD[CN4] >= gAD[CN6]){
          Smalldiff = 30;
          I = MP * -1;
          J = MP;
          K = MP * -1;
          L = MP;
          break;
        }else if(gAD[CN6] >= gAD[CN4]){
          Smalldiff = 30;
          I = MP;
          J = MP * -1;
          K = MP;
          L = MP * -1;
          break;
        }
      case 21://左後
        Smalldiff = 25;
        I = 0;
        J = MP * -1;
        K = 0;
        L = MP * -1;
        break;
      case 22://左
        pixy = 1;
        Smalldiff = 20;
        I = MP * -1;
        J = MP * -1;
        K = MP * -1;
        L = MP * -1;
        break;
      case 23://左前
        pixy = 1;
        Smalldiff = 20;
        I = MP * -1;
        J = 0;
        K = MP * -1;
        L = 0;
        break;
      case 24://見えない
        Smalldiff = 10;
        I = -30;
        J = -30;
        K = -30;
        L = -30;
        break;
    }
    if(pixy == 0){
      DIR();
    }else if(pixy == 1){
      Smalldiff = 60;
      PIXYDIR();
    }
    MOTOR();
  }
}